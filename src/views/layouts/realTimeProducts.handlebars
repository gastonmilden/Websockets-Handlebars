<h1>Real-Time Products</h1>
<ul id="productList">
  {{#each products}}
    <li>{{this.title}} - {{this.description}}</li>
  {{/each}}
</ul>

<!-- Agregar formulario para agregar nuevos productos -->
<form id="addProductForm">
  <input type="text" name="title" placeholder="Product Title" required>
  <input type="text" name="description" placeholder="Product Description" required>
  <button type="submit">Add Product</button>
</form>

<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.1.2/socket.io.js"></script>
<script>
  const socket = io();

  // Escuchar eventos de actualización de productos
  socket.on("updateProducts", (updatedProducts) => {
    // Actualizar la lista de productos en la vista
    const productList = document.getElementById("productList");
    productList.innerHTML = updatedProducts.map(product => `<li>${product.title} - ${product.description}</li>`).join("");
  });

  // Manejar el envío del formulario para agregar nuevos productos
  const addProductForm = document.getElementById("addProductForm");
  addProductForm.addEventListener("submit", (event) => {
    event.preventDefault();
    const formData = new FormData(addProductForm);
    const newProduct = {
      title: formData.get("title"),
      description: formData.get("description"),
    };

    // Emitir evento para agregar un nuevo producto
    socket.emit("addProduct", newProduct);
  });
</script>